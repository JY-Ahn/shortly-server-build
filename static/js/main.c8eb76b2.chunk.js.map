{"version":3,"sources":["modules/list.js","components/LinkItem.js","components/LinkList.js","pages/List.js","modules/shorten.js","components/Input.js","pages/Shorten.js","pages/Home.js","modules/login.js","components/LoginInput.js","pages/Login.js","modules/signup.js","components/SignupInput.js","pages/Signup.js","components/Template.js","App.js","Root.js","serviceWorker.js","modules/index.js","store.js","index.js"],"names":["getList","dispatch","type","axios","get","then","result","payload","data","catch","error","handleActions","state","action","pending","LinkItem","this","props","title","url","baseUrl","code","visits","className","href","target","Component","LinkList","ListActions","map","data_val","i","key","connect","list","bindActionCreators","listActions","List","shorten","post","postUrlAPI","Input","onCreate","onChange","value","onClick","Shorten","input","handleChange","e","setState","handleCreate","ShortenActions","shortenActions","Home","defaults","withCredentials","initialState","isLogin","localStorage","getItem","login","postLoginAPI","logout","emailValue","passwordValue","onEmailChange","onPasswordChange","Login","handleEmailChange","handlePasswordChange","handleLogin","LoginActions","email","password","setItem","Redirect","to","LoginInput","loginActions","isSignup","signup","postSignupAPI","SignupInput","usernameValue","onUsernameChange","Signup","handleUsernameChange","handleSignup","SignupActions","username","signupActions","Template","handleLogout","Link","App","Route","exact","path","component","Switch","Root","BrowserRouter","Boolean","window","location","hostname","match","combineReducers","store","createStore","modules","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8eb76b2.chunk.js","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport axios from 'axios';\n\nconst GET_LIST_PENDING = 'GET_LIST_PENDING';\nconst GET_LIST_SUCCESS = 'GET_LIST_SUCCESS';\nconst GET_LIST_FAILURE = 'GET_LIST_FAILUER';\n\nfunction getListAPI() {\n  return axios.get('http://localhost:3001/links');\n}\n\nconst initialState = {\n  pending: false,\n  error: false,\n  data: []\n};\n\nexport const getList = () => dispatch => {\n  dispatch({ type: GET_LIST_PENDING });\n\n  return getListAPI()\n    .then(result => {\n      dispatch({\n        type: GET_LIST_SUCCESS,\n        payload: result.data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: GET_LIST_FAILURE,\n        payload: error\n      });\n    });\n};\n\nexport default handleActions(\n  {\n    [GET_LIST_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [GET_LIST_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        data: action.payload\n      };\n    },\n    [GET_LIST_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    }\n  },\n  initialState\n);\n","import React, { Component } from 'react';\nimport './LinkItem.css';\n\nclass LinkItem extends Component {\n  render() {\n    const { title, url, baseUrl, code, visits } = this.props;\n\n    return (\n      <div className=\"link-item\">\n        <div className=\"\">{title}</div>\n        <div>{url}</div>\n        <a\n          href={`http://${baseUrl}/${code}`}\n          target=\"_blank\"\n        >{`http://${baseUrl}/${code}`}</a>\n        <div>{`${visits} Visits`}</div>\n      </div>\n    );\n  }\n}\n\nexport default LinkItem;\n","import React, { Component } from 'react';\nimport './LinkList.css';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as listActions from '../modules/list';\n\nimport LinkItem from './LinkItem';\n\nclass LinkList extends Component {\n  componentDidMount() {\n    const { ListActions } = this.props;\n\n    ListActions.getList();\n  }\n\n  render() {\n    const { data } = this.props;\n\n    return (\n      <div>\n        {data ? (\n          data.map((data_val, i) => <LinkItem key={i} {...data_val} />)\n        ) : (\n          <h1>No Content</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    data: state.list.data\n  }),\n  dispatch => ({\n    ListActions: bindActionCreators(listActions, dispatch)\n  })\n)(LinkList);\n","import React from 'react';\nimport LinkList from '../components/LinkList';\n\nconst List = () => {\n  return <LinkList />;\n};\n\nexport default List;\n","import { handleActions } from 'redux-actions';\n\nimport axios from 'axios';\n\nconst POST_URL_PENDING = 'POST_URL_PENDING';\nconst POST_URL_SUCCESS = 'POST_URL_SUCCESS';\nconst POST_URL_FAILURE = 'POST_URL_FAILUER';\n\nfunction postUrlAPI(data) {\n  return axios.post('http://localhost:3001/links', data);\n}\n\nconst initialState = {\n  pending: false,\n  error: false,\n  data: null\n};\n\nexport const shorten = data => dispatch => {\n  dispatch({ type: POST_URL_PENDING });\n\n  return postUrlAPI(data)\n    .then(result => {\n      dispatch({\n        type: POST_URL_SUCCESS,\n        payload: result.data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: POST_URL_FAILURE,\n        payload: error\n      });\n    });\n};\n\nexport default handleActions(\n  {\n    [POST_URL_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false\n      };\n    },\n    [POST_URL_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        data: action.payload\n      };\n    },\n    [POST_URL_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true\n      };\n    }\n  },\n  initialState\n);\n","import React from 'react';\nimport './Input.css';\n\nconst Input = ({ onCreate, onChange, value }) => {\n  return (\n    <div className=\"input\">\n      <input value={value} onChange={onChange} />\n      <div className=\"create-button\" onClick={onCreate}>\n        Shorten\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as shortenActions from '../modules/shorten';\nimport { bindActionCreators } from 'redux';\n\nimport Input from '../components/Input';\nimport LinkItem from '../components/LinkItem';\n\nclass Shorten extends Component {\n  state = {\n    input: ''\n  };\n\n  handleChange = e => {\n    this.setState({\n      input: e.target.value\n    });\n  };\n\n  handleCreate = () => {\n    const { input } = this.state;\n\n    const { ShortenActions } = this.props;\n\n    ShortenActions.shorten({ url: input });\n\n    this.setState({ input: '' });\n  };\n\n  render() {\n    const { data } = this.props;\n    const { input } = this.state;\n    const { handleChange, handleCreate } = this;\n\n    return (\n      <div>\n        <Input value={input} onChange={handleChange} onCreate={handleCreate} />\n\n        {data ? <LinkItem {...data} /> : null}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    data: state.shorten.data\n  }),\n  dispatch => ({\n    ShortenActions: bindActionCreators(shortenActions, dispatch)\n  })\n)(Shorten);\n","import React from 'react';\n\nconst Home = () => {\n  return (\n    <div>\n      <div>\n        url을 줄이고 해당 url 접속수를 카운팅 할수 있는 기능을 가진 사이트\n        입니다\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { handleActions } from 'redux-actions';\n\nimport axios from 'axios';\n\nconst POST_LOGIN_PENDING = 'POST_LOGIN_PENDING';\nconst POST_LOGIN_SUCCESS = 'POST_LOGIN_SUCCESS';\nconst POST_LOGIN_FAILURE = 'POST_LOGIN_FAILUER';\n\nconst LOGOUT = 'LOGOUT';\n\naxios.defaults.withCredentials = true;\n\nfunction postLoginAPI(data) {\n  return axios.post('http://localhost:3001/user/signin', data);\n}\n\nfunction postLogoutAPI() {\n  return axios.post('http://localhost:3001/user/signout');\n}\n\nconst initialState = {\n  pending: false,\n  error: false,\n  isLogin: localStorage.getItem('isLogin') === 'true'\n};\n\nexport const login = data => dispatch => {\n  dispatch({ type: POST_LOGIN_PENDING });\n\n  return postLoginAPI(data)\n    .then(result => {\n      dispatch({\n        type: POST_LOGIN_SUCCESS,\n        payload: result.data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: POST_LOGIN_FAILURE,\n        payload: error\n      });\n    });\n};\n\nexport const logout = data => dispatch => {\n  return postLogoutAPI().then(result => {\n    dispatch({ type: LOGOUT });\n  });\n};\n\nexport default handleActions(\n  {\n    [POST_LOGIN_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false,\n        isLogin: false\n      };\n    },\n    [POST_LOGIN_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        data: action.payload,\n        isLogin: true\n      };\n    },\n    [POST_LOGIN_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true,\n        isLogin: false\n      };\n    },\n    [LOGOUT]: (state, action) => {\n      return {\n        ...state,\n        isLogin: false\n      };\n    }\n  },\n  initialState\n);\n","import React from 'react';\nimport './Input.css';\n\nconst Input = ({\n  emailValue,\n  passwordValue,\n  onEmailChange,\n  onPasswordChange\n}) => {\n  return (\n    <div className=\"input\">\n      <div>\n        <label> Email </label>\n        <input value={emailValue} onChange={onEmailChange} />\n      </div>\n      <div>\n        <label> password </label>\n        <input\n          value={passwordValue}\n          onChange={onPasswordChange}\n          type=\"password\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as loginActions from '../modules/login';\nimport { bindActionCreators } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport LoginInput from '../components/LoginInput';\n\nclass Login extends Component {\n  state = {\n    emailValue: '',\n    passwordValue: ''\n  };\n\n  handleEmailChange = e => {\n    this.setState({\n      emailValue: e.target.value\n    });\n  };\n\n  handlePasswordChange = e => {\n    this.setState({\n      passwordValue: e.target.value\n    });\n  };\n\n  handleLogin = () => {\n    const { emailValue, passwordValue } = this.state;\n\n    const { LoginActions } = this.props;\n\n    LoginActions.login({ email: emailValue, password: passwordValue }).then(\n      () => {\n        localStorage.setItem('isLogin', true);\n      }\n    );\n  };\n\n  render() {\n    const { emailValue, passwordValue } = this.state;\n    const { isLogin } = this.props;\n    const { handleEmailChange, handlePasswordChange, handleLogin } = this;\n\n    return (\n      <div>\n        {isLogin ? <Redirect to=\"/shorten\" /> : ''}\n        <LoginInput\n          emailValue={emailValue}\n          passwordValue={passwordValue}\n          onEmailChange={handleEmailChange}\n          onPasswordChange={handlePasswordChange}\n        />\n\n        <button onClick={handleLogin}>Login</button>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    isLogin: state.login.isLogin\n  }),\n  dispatch => ({\n    LoginActions: bindActionCreators(loginActions, dispatch)\n  })\n)(Login);\n","import { handleActions } from 'redux-actions';\n\nimport axios from 'axios';\n\nconst POST_SIGNUP_PENDING = 'POST_SIGNUP_PENDING';\nconst POST_SIGNUP_SUCCESS = 'POST_SIGNUP_SUCCESS';\nconst POST_SIGNUP_FAILURE = 'POST_SIGNUP_FAILUER';\n\naxios.defaults.withCredentials = true;\n\nfunction postSignupAPI(data) {\n  return axios.post('http://localhost:3001/user/signup', data);\n}\n\nconst initialState = {\n  pending: false,\n  error: false,\n  isSignup: localStorage.getItem('isSignup') === 'true'\n};\n\nexport const signup = data => dispatch => {\n  dispatch({ type: POST_SIGNUP_PENDING });\n\n  return postSignupAPI(data)\n    .then(result => {\n      dispatch({\n        type: POST_SIGNUP_SUCCESS,\n        payload: result.data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: POST_SIGNUP_FAILURE,\n        payload: error\n      });\n    });\n};\n\nexport default handleActions(\n  {\n    [POST_SIGNUP_PENDING]: (state, action) => {\n      return {\n        ...state,\n        pending: true,\n        error: false,\n        isSignup: false\n      };\n    },\n    [POST_SIGNUP_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        data: action.payload,\n        isSignup: false\n      };\n    },\n    [POST_SIGNUP_FAILURE]: (state, action) => {\n      return {\n        ...state,\n        pending: false,\n        error: true,\n        isSignup: false\n      };\n    }\n  },\n  initialState\n);\n","import React from 'react';\nimport './Input.css';\n\nconst SignupInput = ({\n  emailValue,\n  usernameValue,\n  passwordValue,\n  onEmailChange,\n  onUsernameChange,\n  onPasswordChange\n}) => {\n  return (\n    <div className=\"input\">\n      <div>\n        <label> Email </label>\n        <input value={emailValue} onChange={onEmailChange} />\n      </div>\n      <div>\n        <label> Username </label>\n        <input value={usernameValue} onChange={onUsernameChange} />\n      </div>\n      <div>\n        <label> password </label>\n        <input\n          value={passwordValue}\n          onChange={onPasswordChange}\n          type=\"password\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SignupInput;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as signupActions from '../modules/signup';\nimport { bindActionCreators } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport SignupInput from '../components/SignupInput';\n\nclass Signup extends Component {\n  state = {\n    emailValue: '',\n    usernameValue: '',\n    passwordValue: ''\n  };\n\n  handleEmailChange = e => {\n    this.setState({\n      emailValue: e.target.value\n    });\n  };\n\n  handleUsernameChange = e => {\n    this.setState({\n      usernameValue: e.target.value\n    });\n  };\n\n  handlePasswordChange = e => {\n    this.setState({\n      passwordValue: e.target.value\n    });\n  };\n\n  handleSignup = () => {\n    const { emailValue, usernameValue, passwordValue } = this.state;\n\n    const { SignupActions } = this.props;\n\n    SignupActions.signup({\n      email: emailValue,\n      username: usernameValue,\n      password: passwordValue\n    }).then(() => {\n      localStorage.setItem('isSignup', false);\n    });\n  };\n\n  render() {\n    const { emailValue, usernameValue, passwordValue } = this.state;\n    const { isSignup } = this.props;\n    const {\n      handleEmailChange,\n      handleUsernameChange,\n      handlePasswordChange,\n      handleSignup\n    } = this;\n\n    return (\n      <div>\n          {isSignup ? <Redirect to=\"/login\" /> : \"/signup\"}\n        <SignupInput\n          emailValue={emailValue}\n          usernameValue={usernameValue}\n          passwordValue={passwordValue}\n          onEmailChange={handleEmailChange}\n          onUsernameChange={handleUsernameChange}\n          onPasswordChange={handlePasswordChange}\n        />\n\n        <button onClick={handleSignup}>SignUp</button>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    isSignup: state.signup.isSignup\n  }),\n  dispatch => ({\n    SignupActions: bindActionCreators(signupActions, dispatch)\n  })\n)(Signup);\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport './Template.css';\nimport * as loginActions from '../modules/login';\nimport * as signupActions from '../modules/signup';\nimport Axios from 'axios';\n\nclass Template extends Component {\n  handleLogout = () => {\n    const { LoginActions } = this.props;\n    LoginActions.logout().then(() => {\n      localStorage.setItem('isLogin', false);\n    });\n  };\n\n  render() {\n    const { isLogin } = this.props;\n    const { handleLogout } = this;\n\n    return (\n      <div className=\"template\">\n        <h2 className=\"title\">Shortly</h2>\n        <div>\n          <Link className=\"menu-item\" to={'/list'}>\n            List\n          </Link>\n          <Link className=\"menu-item\" to={'/shorten'}>\n            Shorten\n          </Link>\n          {isLogin ? (\n            <span\n              className=\"menu-item\"\n              onClick={() => {\n                handleLogout();\n              }}\n            >\n              Logout\n            </span>\n          ) : (\n            <Link className=\"menu-item\" to={'/Login'}>\n              Login\n            </Link>\n          )}\n          {isLogin ? <Redirect to={'/Login'} /> : ''}\n          <Link className=\"menu-item\" to={'/signup'}>\n            Signup\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    isLogin: state.login.isLogin\n  }),\n  dispatch => ({\n    LoginActions: bindActionCreators(loginActions, dispatch)\n  })\n)(Template);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { List, Shorten, Home, Login, Signup } from './pages';\nimport Template from './components/Template';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Template />\n        <Route exact path=\"/\" component={Home} />\n        <Switch>\n          <Route path=\"/list\" component={List} />\n          <Route path=\"/shorten\" component={Shorten} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nconst Root = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport list from './list';\nimport shorten from './shorten';\nimport login from './login';\nimport signup from './signup';\n\nexport default combineReducers({\n  list,\n  shorten,\n  login,\n  signup\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport modules from './modules';\n\nimport ReduxThunk from 'redux-thunk';\n\nconst store = createStore(modules, applyMiddleware(ReduxThunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Root />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}